//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: PatItem.proto
// Note: requires additional types generated from: U64Type.proto
namespace Pb
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"PatItem")]
  public partial class PatItem : global::ProtoBuf.IExtensible
  {
    public PatItem() {}
    
    private uint _id;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint id
    {
      get { return _id; }
      set { _id = value; }
    }
    private U64Type _uuid;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"uuid", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public U64Type uuid
    {
      get { return _uuid; }
      set { _uuid = value; }
    }
    private uint _exp;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"exp", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint exp
    {
      get { return _exp; }
      set { _exp = value; }
    }
    private uint _xingji;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"xingji", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint xingji
    {
      get { return _xingji; }
      set { _xingji = value; }
    }
    private uint _expshenlian;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"expshenlian", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint expshenlian
    {
      get { return _expshenlian; }
      set { _expshenlian = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}