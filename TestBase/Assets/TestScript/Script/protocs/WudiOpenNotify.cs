//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: WudiOpenNotify.proto
namespace Pb
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"WudiOpenNotify")]
  public partial class WudiOpenNotify : global::ProtoBuf.IExtensible
  {
    public WudiOpenNotify() {}
    
    private uint _status;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"status", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint status
    {
      get { return _status; }
      set { _status = value; }
    }
    private uint _end_cd;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"end_cd", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint end_cd
    {
      get { return _end_cd; }
      set { _end_cd = value; }
    }

    private uint _last_status = default(uint);
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"last_status", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(uint))]
    public uint last_status
    {
      get { return _last_status; }
      set { _last_status = value; }
    }

    private uint _last_interval = default(uint);
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"last_interval", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(uint))]
    public uint last_interval
    {
      get { return _last_interval; }
      set { _last_interval = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}