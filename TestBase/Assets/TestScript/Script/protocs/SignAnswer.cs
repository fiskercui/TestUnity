//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: SignAnswer.proto
namespace Pb
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"SignAnswer")]
  public partial class SignAnswer : global::ProtoBuf.IExtensible
  {
    public SignAnswer() {}
    
    private uint _result;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"result", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint result
    {
      get { return _result; }
      set { _result = value; }
    }
    private readonly global::System.Collections.Generic.List<uint> _item_count = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(10, Name=@"item_count", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> item_count
    {
      get { return _item_count; }
    }
  
    private readonly global::System.Collections.Generic.List<uint> _luxury_sign_id = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(11, Name=@"luxury_sign_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> luxury_sign_id
    {
      get { return _luxury_sign_id; }
    }
  
    private uint _type;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint type
    {
      get { return _type; }
      set { _type = value; }
    }
    private uint _month;
    [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name=@"month", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint month
    {
      get { return _month; }
      set { _month = value; }
    }
    private uint _sign_days;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"sign_days", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint sign_days
    {
      get { return _sign_days; }
      set { _sign_days = value; }
    }
    private uint _can_sign_days;
    [global::ProtoBuf.ProtoMember(5, IsRequired = true, Name=@"can_sign_days", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint can_sign_days
    {
      get { return _can_sign_days; }
      set { _can_sign_days = value; }
    }
    private uint _today_signed;
    [global::ProtoBuf.ProtoMember(6, IsRequired = true, Name=@"today_signed", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint today_signed
    {
      get { return _today_signed; }
      set { _today_signed = value; }
    }
    private uint _reward_day;
    [global::ProtoBuf.ProtoMember(7, IsRequired = true, Name=@"reward_day", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public uint reward_day
    {
      get { return _reward_day; }
      set { _reward_day = value; }
    }
    private readonly global::System.Collections.Generic.List<uint> _item_type = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(8, Name=@"item_type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> item_type
    {
      get { return _item_type; }
    }
  
    private readonly global::System.Collections.Generic.List<uint> _item_id = new global::System.Collections.Generic.List<uint>();
    [global::ProtoBuf.ProtoMember(9, Name=@"item_id", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<uint> item_id
    {
      get { return _item_id; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}